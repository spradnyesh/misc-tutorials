(defparameter *arr* (make-array 100 :initial-element 1))
(defparameter *largest* 1)
(defun factorial (n)
  (if (<= n *largest*)
      (aref *arr* (1- n))
      (dotimes (i (- n *largest*) (aref *arr* (1- n)))
        (setf (aref *arr* *largest*)
              (* (aref *arr* (1- *largest*))
                 (1+ *largest*)))
        (incf *largest*))))
(let ((n (read)))
  (dotimes (i n)
    (format t "~A~%" (factorial (read)))))
